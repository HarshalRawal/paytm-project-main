generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://chat_user:chat_password@localhost:2049/chat_db"
}

model Chat {
  id          String    @id @default(uuid())          // Unique identifier for the chat
  participant1Id String                               // ID of the first participant
  participant2Id String                               // ID of the second participant
  lastMessage String?                                 // Content of the last message in the chat
  status      ChatStatus @default(ACTIVE)             // Status of the chat
  updatedAt   DateTime @updatedAt                     // Timestamp of the last update in the chat
  createdAt   DateTime @default(now())                // Timestamp when the chat was created
  messages    Message[] @relation("ChatMessages")     // Relation to messages
  @@unique([participant1Id, participant2Id])          // Ensure one chat per user pair
  @@index([participant1Id, participant2Id])           // Index for quick lookups
}

model Message {
  id             String       @id @default(uuid())          // Unique identifier for the message
  chatId         String                                    // Reference to the chat
  senderId       String                                       // ID of the user sending the message
  receiverId     String                                       // ID of the user receiving the message
  content        String?                                      // Message content
  type           MessageType  @default(TEXT)                  // Message type (e.g., TEXT, TRANSACTION)
  textStatus     MessageStatus?                              // Delivery status for text messages
  timestamp      DateTime     @default(now())                // Timestamp of when the message was sent
  transactionId  String?                                      // Reference to the transaction (for transaction messages)
  attachmentUrl  String?                                      // URL for attachments (optional)
  chat           Chat         @relation("ChatMessages", fields: [chatId], references: [id]) // Foreign key relation
  @@index([chatId])                                            // Index for quick retrieval of messages
}

enum MessageType {
  TEXT          // Normal text message
  TRANSACTION   // Transaction-related message
}

enum MessageStatus {
  SENT       // Message has been sent
  DELIVERED  // Message has been delivered to the recipient
  READ       // Message has been read by the recipient
}

enum ChatStatus {
  ACTIVE     // Chat is active
  ARCHIVED   // Chat has been archived
}
